기능분류

법인(혹은 창업자)
    -> 각 점포별 매출 순위
    -> 재료 소모량과 메뉴 판매량 비교 (수급 점검)
    -> 지역별, 위치별 점포 판매 실적 비교
    -> 메뉴별 판매량 (식사 시간, 주문 패턴 등 다양한 항목 제공)
    -> 메뉴 수정 및 일률화
    -> 식자재 재고 및 유통 분석
    -> 점포별 매출 상세보기
    -> 영업이익 계산
    -> 기타 세무 관련 기능
개인(체인점포)
    -> 가게 구성
    -> 식자재 점검
    -> 식자재 주문 및 수령
    -> 매출 분석 (일간, 주간, 월간, 년간)
    -> 메뉴 수정 (수정 후, 본사에서 승낙해야함)
    -> 장사 시작 및 종료
    -> 태블릿 연동 및 자동화
    -> 기술지원 요청

1. 초기 회원가입 시 법인(혹은 자영업자)과 개인 중 선택하여 가입.
-> 자영업자의 경우 법인 계정과 개인 계정 둘 다 보유

2. 가입 후 법인의 경우 사업자 등록증을, 개인의 경우 법인의 승낙을 받고
점포 번호 혹은 id를 할당받음. 이후 개인의 경우 소셜 연동으로 편하게 로그인 가능

3. 태블릿등으로 로그인 후 연동시 테이블 번호에 맞게 설정되고
자동으로 데이터베이스에 손님 입장부터 결제까지 모든 정보가 연동됨

4. 법인 계정에서는 실시간으로 매장 상황을 파악할 수 있으나 개인측에서 기능을 끌 수 있음

법인 계정 :
1) 각 점포에 대한 권한 설정
2) 점포별 상납비 설정
3) 전 매장 공용 메뉴 추가 및 수정
4) 식자재 현황 추가 및 관리, 배송 관리
5) 그 외 회계업무 (이익, 비용계산, 분석 등)

개인 계정 :
1) 매장 구성 (테이블 구성과 번호 설정)
2) 태블릿 연동 (매장 구성과 연동해서 각 테이블마다 태블릿 연동 가능)
3) 장사 시작 및 종료 혹은 시간을 설정해서 자동 가능
4) 개인 메뉴 및 서비스 추가 가능
5) 식자재 알람 (메뉴 주문 시 식자재 재고에서 일정량 감소, n%미만이면 알람)
6) 식자재 주문 (본사에서 배송받을 시 주문. 개인이 구입시에는 리필 형태)
7) 매출 분석 및 회계 관리 (이익, 비용계산, 분석 등)
8) 소셜 계정 인증 (간단한 로그인으로 전환 가능)


프레임워크

Backend

- Django
사이트의 전반적인 가입, 인증, 데이터베이스 관리를 담당

- Go
회계 처리, 계산, 실시간으로 장사중인 데이터 전송에 관해 담당함

Frontend

- JavaScript
간단하게 사이트 구성

DB

- 관계형 데이터 베이스
사이트 가입 데이터, 처리 완료된 회계 데이터, 조회업무 등에 사용될 데이터를 저장

- 온 메모리 데이터 베이스
실시간 장사 데이터 저장. 장사 종료 후 해당 데이터를 덤프하여 가공 후 관계형 데이터베이스에 저장

DevOps

Docker, AWS등을 이용해서 사이트 배포 및 서비스 구축